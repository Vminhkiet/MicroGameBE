// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: match/match.proto

package match

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      uint32                 `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinMatchRequest) Reset() {
	*x = JoinMatchRequest{}
	mi := &file_match_match_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMatchRequest) ProtoMessage() {}

func (x *JoinMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_match_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMatchRequest.ProtoReflect.Descriptor instead.
func (*JoinMatchRequest) Descriptor() ([]byte, []int) {
	return file_match_match_proto_rawDescGZIP(), []int{0}
}

func (x *JoinMatchRequest) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *JoinMatchRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type JoinMatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
	YourPlayerId  uint32                 `protobuf:"varint,2,opt,name=yourPlayerId,proto3" json:"yourPlayerId,omitempty"`
	Players       []*PlayerInfo          `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinMatchResponse) Reset() {
	*x = JoinMatchResponse{}
	mi := &file_match_match_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMatchResponse) ProtoMessage() {}

func (x *JoinMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_match_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMatchResponse.ProtoReflect.Descriptor instead.
func (*JoinMatchResponse) Descriptor() ([]byte, []int) {
	return file_match_match_proto_rawDescGZIP(), []int{1}
}

func (x *JoinMatchResponse) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *JoinMatchResponse) GetYourPlayerId() uint32 {
	if x != nil {
		return x.YourPlayerId
	}
	return 0
}

func (x *JoinMatchResponse) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type PlayerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      uint32                 `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Team          uint32                 `protobuf:"varint,4,opt,name=team,proto3" json:"team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	mi := &file_match_match_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_match_match_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_match_match_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerInfo) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerInfo) GetTeam() uint32 {
	if x != nil {
		return x.Team
	}
	return 0
}

var File_match_match_proto protoreflect.FileDescriptor

const file_match_match_proto_rawDesc = "" +
	"\n" +
	"\x11match/match.proto\x12\x05match\"J\n" +
	"\x10JoinMatchRequest\x12\x1a\n" +
	"\bplayerId\x18\x01 \x01(\rR\bplayerId\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\"~\n" +
	"\x11JoinMatchResponse\x12\x18\n" +
	"\amatchId\x18\x01 \x01(\tR\amatchId\x12\"\n" +
	"\fyourPlayerId\x18\x02 \x01(\rR\fyourPlayerId\x12+\n" +
	"\aplayers\x18\x03 \x03(\v2\x11.match.PlayerInfoR\aplayers\"X\n" +
	"\n" +
	"PlayerInfo\x12\x1a\n" +
	"\bplayerId\x18\x01 \x01(\rR\bplayerId\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x12\x12\n" +
	"\x04team\x18\x04 \x01(\rR\x04teamB\x13Z\x11pkg/packets/matchb\x06proto3"

var (
	file_match_match_proto_rawDescOnce sync.Once
	file_match_match_proto_rawDescData []byte
)

func file_match_match_proto_rawDescGZIP() []byte {
	file_match_match_proto_rawDescOnce.Do(func() {
		file_match_match_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_match_match_proto_rawDesc), len(file_match_match_proto_rawDesc)))
	})
	return file_match_match_proto_rawDescData
}

var file_match_match_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_match_match_proto_goTypes = []any{
	(*JoinMatchRequest)(nil),  // 0: match.JoinMatchRequest
	(*JoinMatchResponse)(nil), // 1: match.JoinMatchResponse
	(*PlayerInfo)(nil),        // 2: match.PlayerInfo
}
var file_match_match_proto_depIdxs = []int32{
	2, // 0: match.JoinMatchResponse.players:type_name -> match.PlayerInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_match_match_proto_init() }
func file_match_match_proto_init() {
	if File_match_match_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_match_match_proto_rawDesc), len(file_match_match_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_match_proto_goTypes,
		DependencyIndexes: file_match_match_proto_depIdxs,
		MessageInfos:      file_match_match_proto_msgTypes,
	}.Build()
	File_match_match_proto = out.File
	file_match_match_proto_goTypes = nil
	file_match_match_proto_depIdxs = nil
}
